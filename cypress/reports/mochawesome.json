{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-08T07:17:15.007Z",
    "end": "2022-07-08T07:18:36.809Z",
    "duration": 81802,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b7ea7437-7eb1-45e8-872c-7ee64131d7f9",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0494a31e-17b6-4f81-96fe-bdd533c6c0dd",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "a7cd921a-6641-42a7-bfe7-535660deb884",
              "parentUUID": "0494a31e-17b6-4f81-96fe-bdd533c6c0dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7cd921a-6641-42a7-bfe7-535660deb884"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "961e88dc-29d4-48e0-94fd-831175b46e36",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f8307a10-3b10-490e-9258-7b8551c15ae7",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "b17504c1-36ff-4aa9-ad1f-f5c6f7c4b104",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "04af80be-ae72-4850-bdee-f97325211069",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4478f90f-222e-4dd6-976a-6a097ff95349",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "89075d52-c8b9-4182-ac6f-1c2270321eb9",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "999883e9-f3d6-4ca0-bbd2-96a77cb68b6f",
              "parentUUID": "a91be61a-6710-4b68-a8d2-81ee71e44cf0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "961e88dc-29d4-48e0-94fd-831175b46e36",
            "f8307a10-3b10-490e-9258-7b8551c15ae7",
            "b17504c1-36ff-4aa9-ad1f-f5c6f7c4b104",
            "04af80be-ae72-4850-bdee-f97325211069",
            "4478f90f-222e-4dd6-976a-6a097ff95349",
            "89075d52-c8b9-4182-ac6f-1c2270321eb9",
            "999883e9-f3d6-4ca0-bbd2-96a77cb68b6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3edbd064-04df-4d4c-94a5-b42a05b08cb5",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "bf470b27-62a2-4260-82f8-797b478bebd0",
              "parentUUID": "3edbd064-04df-4d4c-94a5-b42a05b08cb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "01db6aae-4331-4d41-a45f-65137aa005b1",
              "parentUUID": "3edbd064-04df-4d4c-94a5-b42a05b08cb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf470b27-62a2-4260-82f8-797b478bebd0",
            "01db6aae-4331-4d41-a45f-65137aa005b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "544b555b-559c-4da2-99a3-e9f1efe53a1d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "3448d955-1f21-4a54-975b-b57adca62928",
              "parentUUID": "544b555b-559c-4da2-99a3-e9f1efe53a1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7cc95c89-cd3c-40b3-a89c-415d3f9397e8",
              "parentUUID": "544b555b-559c-4da2-99a3-e9f1efe53a1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "119e2d88-9cef-4293-87f9-ec479f3576f1",
              "parentUUID": "544b555b-559c-4da2-99a3-e9f1efe53a1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a314def9-17ce-47b9-91c3-8fd00d7a729c",
              "parentUUID": "544b555b-559c-4da2-99a3-e9f1efe53a1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3448d955-1f21-4a54-975b-b57adca62928",
            "7cc95c89-cd3c-40b3-a89c-415d3f9397e8",
            "119e2d88-9cef-4293-87f9-ec479f3576f1",
            "a314def9-17ce-47b9-91c3-8fd00d7a729c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cdfe8834-a2d6-4855-8719-22cb5927b6e9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "7b56087a-491a-4803-9582-ba2e96c4170f",
              "parentUUID": "cdfe8834-a2d6-4855-8719-22cb5927b6e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "34ab6726-1455-422a-ba80-fad4345f384f",
              "parentUUID": "cdfe8834-a2d6-4855-8719-22cb5927b6e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b56087a-491a-4803-9582-ba2e96c4170f",
            "34ab6726-1455-422a-ba80-fad4345f384f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 562,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c2f7fe4-401f-4d39-aa1c-4407d94dd8c1",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "496ed0cd-b7b3-4475-9af2-2709999b3c34",
              "parentUUID": "5c2f7fe4-401f-4d39-aa1c-4407d94dd8c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d7c3a0bb-40c8-4e1d-9023-7c19ac15f75e",
              "parentUUID": "5c2f7fe4-401f-4d39-aa1c-4407d94dd8c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "496ed0cd-b7b3-4475-9af2-2709999b3c34",
            "d7c3a0bb-40c8-4e1d-9023-7c19ac15f75e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1a7c79cc-4810-485e-8cee-953127ea1942",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "536e4e3e-3f43-4e5b-b3b5-e676da451962",
              "parentUUID": "1a7c79cc-4810-485e-8cee-953127ea1942",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d3cb04ca-b639-4e18-be15-47fe65a0c92e",
              "parentUUID": "1a7c79cc-4810-485e-8cee-953127ea1942",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "536e4e3e-3f43-4e5b-b3b5-e676da451962",
            "d3cb04ca-b639-4e18-be15-47fe65a0c92e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cdfd644-504d-4f0c-b5e3-3fcef06e1f74",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "4a828e98-6cbc-439a-addc-409d5187de49",
              "parentUUID": "7cdfd644-504d-4f0c-b5e3-3fcef06e1f74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "3f521f5f-7355-4f31-b1ea-6f466c95d327",
              "parentUUID": "7cdfd644-504d-4f0c-b5e3-3fcef06e1f74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "efda5d92-4372-4ba5-b645-d280e83ebd3a",
              "parentUUID": "7cdfd644-504d-4f0c-b5e3-3fcef06e1f74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a828e98-6cbc-439a-addc-409d5187de49",
            "3f521f5f-7355-4f31-b1ea-6f466c95d327",
            "efda5d92-4372-4ba5-b645-d280e83ebd3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f544eba6-4389-46e0-8e67-26469f1bb44f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "030711b1-186c-4dbb-a44c-854f348ced41",
              "parentUUID": "f544eba6-4389-46e0-8e67-26469f1bb44f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "34130ea7-56f4-4432-ade2-f6a2891f6838",
              "parentUUID": "f544eba6-4389-46e0-8e67-26469f1bb44f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "2436094b-62ca-4b21-aefd-5f54f5b917a0",
              "parentUUID": "f544eba6-4389-46e0-8e67-26469f1bb44f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a7bc7e53-d064-4a06-85dd-2b271e79fdda",
              "parentUUID": "f544eba6-4389-46e0-8e67-26469f1bb44f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "030711b1-186c-4dbb-a44c-854f348ced41",
            "34130ea7-56f4-4432-ade2-f6a2891f6838",
            "2436094b-62ca-4b21-aefd-5f54f5b917a0",
            "a7bc7e53-d064-4a06-85dd-2b271e79fdda"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8984078c-b1ef-455d-aa9b-25d65f892d36",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4310,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "675c5b2d-6313-455f-a08d-a8647920947d",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "95bad4af-8b4e-4dcc-a89b-ecb2147e4df1",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0c6345eb-d459-417a-b5b9-6e48ae1f4312",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1bddd13e-470e-4673-be8b-94330dbe86db",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "02f26ef7-e49c-4a44-8ece-e6ee4ca1fd9f",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e69f1eee-7870-48c5-b880-cdc940fe574a",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4360,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2bec494c-0249-40fa-9de7-ab901d7a3ae5",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "043afa09-7a83-493e-94c8-20eac9d537d4",
              "parentUUID": "e0ab28ef-4b1b-456d-a0a9-826dd8218ef7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8984078c-b1ef-455d-aa9b-25d65f892d36",
            "675c5b2d-6313-455f-a08d-a8647920947d",
            "95bad4af-8b4e-4dcc-a89b-ecb2147e4df1",
            "0c6345eb-d459-417a-b5b9-6e48ae1f4312",
            "1bddd13e-470e-4673-be8b-94330dbe86db",
            "02f26ef7-e49c-4a44-8ece-e6ee4ca1fd9f",
            "e69f1eee-7870-48c5-b880-cdc940fe574a",
            "2bec494c-0249-40fa-9de7-ab901d7a3ae5",
            "043afa09-7a83-493e-94c8-20eac9d537d4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38855,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e43042e9-2fe0-4595-9672-056a19c633eb",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c3b6f97a-8a18-4290-bde5-8b892d5e9c0a",
              "parentUUID": "e43042e9-2fe0-4595-9672-056a19c633eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4288,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac5421b7-e5a8-4fc6-90a1-b0c87ec1f46b",
              "parentUUID": "e43042e9-2fe0-4595-9672-056a19c633eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37057/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37057/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37057/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37057/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37057/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37057/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3ce6d250-6dd0-42fb-9c0d-14793681f8b4",
              "parentUUID": "e43042e9-2fe0-4595-9672-056a19c633eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c3b6f97a-8a18-4290-bde5-8b892d5e9c0a",
            "ac5421b7-e5a8-4fc6-90a1-b0c87ec1f46b",
            "3ce6d250-6dd0-42fb-9c0d-14793681f8b4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "402a2691-3087-44f7-b298-c2cf7bc49a7d",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 367,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37057/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37057/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37057/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37057/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37057/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37057/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37057/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4763dec8-e477-4dda-8866-e9a556e008ef",
              "parentUUID": "402a2691-3087-44f7-b298-c2cf7bc49a7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37057/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37057/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37057/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37057/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37057/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37057/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37057/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37057/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37057/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37057/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37057/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37057/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "be999b83-d7c4-4293-9bf9-c6655c08ca5b",
              "parentUUID": "402a2691-3087-44f7-b298-c2cf7bc49a7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4763dec8-e477-4dda-8866-e9a556e008ef",
            "be999b83-d7c4-4293-9bf9-c6655c08ca5b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}